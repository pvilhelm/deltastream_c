
#include <stdlib.h>

#include "node_tree.h"

static int test_node() {
    tree_node_t* root = calloc(1,sizeof(tree_node_t));
    node_t nodes[] = 
    {
        { .ip = 85, .port = 10 },
        { .ip = 4, .port = 10 },
        { .ip = 44, .port = 10 },
        { .ip = 16, .port = 10 },
        { .ip = 13, .port = 10 },
        { .ip = 87, .port = 10 },
        { .ip = 102, .port = 10 },
        { .ip = 1, .port = 10 },
        { .ip = 32, .port = 10 },
        { .ip = 21, .port = 10 }
    };

    for(int i = 0; i<sizeof(nodes)/sizeof(nodes[0]);i++)
        add_child(root,&nodes[i]);

    //% find_child(root,13,10) != 0

    tree_node_t* rem = find_child(root,13,10);

    //% remove_child(rem) == rem

    free(rem);

    //% find_child(root,13,10) == 0

    //! int free_all_children()
    //% free_all_children(root,0) == 9
    
    return 0; 
}